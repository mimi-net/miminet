version: "3.9"

services:
  miminet:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: miminet
    restart: always
    networks:
      miminet_network:
        ipv4_address: 172.18.0.3
      rabbitmq_network:
    env_file:
      - .env
    expose:
      - 80
    volumes:
      - ./src/static/images:/app/static/images
      - ./src/static/svg:/app/static/svg
      - ./src/static/avatar:/app/static/avatar
      - ./src/static/video:/app/static/video
      - ./src/static/pcaps:/app/static/pcaps
      - ./src/static/assets:/app/static/assets
      - ./src/static/quiz_images:/app/static/quiz_images
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
  rabbitmq:
    image: rabbitmq:latest
    hostname: rabbitmq
    container_name: rabbitmq
    restart: always
    networks:
      - rabbitmq_network
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ./rabbitmq/rabbitmq:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/metrics_collector.conf:/etc/rabbitmq/conf.d/20-management_agent.disable_metrics_collector.conf
    ports:
      - "15672:15672"
      - "5672:5672"
      - "4369:4369"
      - "25672:25672"
      - "35197:35197"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
  nginx:
    container_name: nginx
    image: nginx
    restart: always
    volumes:
      - ./default.conf.template:/etc/nginx/templates/default.conf.template
    ports:
      - "80:80"
    networks:
      miminet_network:
        ipv4_address: 172.18.0.2
  postgres:
      image: postgres:latest
      container_name: postgres
      environment:
        POSTGRES_USER: ${POSTGRES_DEFAULT_USER}
        POSTGRES_PASSWORD: ${POSTGRES_DEFAULT_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DATABASE_NAME}
        PGDATA: /var/lib/postgresql/data/pgdata
      ports:
        - "5430:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres -d miminet"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
      restart: unless-stopped
      env_file:
      - .env
      volumes:
        - pgdata:/var/lib/postgresql/data/pgdata
      networks:
        miminet_network:
          ipv4_address: 172.18.0.4

volumes:
  pgdata:
    driver: local

networks:
  miminet_network:
    name: miminet_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
  rabbitmq_network:
    name: rabbitmq_network
    ipam:
      config:
        - subnet: 172.20.0.0/16
